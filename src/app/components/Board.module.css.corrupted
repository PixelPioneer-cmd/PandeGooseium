/* === STYLES SIMPLIFIÉS POUR MODE 2D === */

/* Animation simple pour case active */
@keyframes subtleGlow {
  0% { opacity: 0.8; }
  100% { opacity: 1; }
}

@keyframes fadeIn {
  0% { opacity: 0; transform: translateY(10px); }
  100% { opacity: 1; transform: translateY(0); }
}

/* === CONTENEUR PRINCIPAL === */
.boardContainer {
  padding: 20px;
  overflow: visible;
  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: relative;
}

/* Container 3D full screen */
.board3DContainer {
  width: 100%;
  height: calc(100vh - 4rem);
  position: relative;
  background: #1a1a1a;
}

/* === PLATEAU PRINCIPAL === */
.boardGrid {
  transform-style: preserve-3d;
  transform-origin: center center;
  position: relative;
  z-index: 10;
  filter: drop-shadow(0 20px 40px rgba(0, 0, 0, 0.5));
}

.boardGrid:hover {
  transition: transform 0.3s ease;
}

/* === GRILLE SPIRALE === */
.spiralBoard {
  display: grid;
  grid-template-columns: repeat(8, minmax(0, 1fr));
  grid-template-rows: repeat(8, minmax(0, 1fr));
  gap: 8px;
  width: clamp(360px, 85vw, 600px);
  height: clamp(360px, 85vw, 600px);
  max-width: 95vw;
  max-height: 95vw;
  position: relative;
  
  border: 2px solid #e2e8f0;
  border-radius: 12px;
  padding: 16px;
  
  background: white;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

/* === CASES DU PLATEAU === */
.boardSquare {
  background: #f8fafc;
  border: 1px solid #cbd5e1;
  border-radius: 6px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
  position: relative;
  cursor: pointer;
}

.boardSquare:hover {
  transform: scale(1.02);
  border-color: #64748b;
}

.squareFront {
  font-size: clamp(0.9rem, 2vw, 1.1rem);
  font-weight: 600;
  color: #334155;
  background: none;
  border: none;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 6px;
  position: relative;
}

/* Masquer les faces 3D pour le mode 2D */
.squareSide, .squareBottom {
  display: none;
}

/* === CASES SPÉCIALES AVEC DESIGN SIMPLE === */

/* Case oie - Couleur verte simple */
.oieSquare {
  background: #dcfce7;
  border-color: #22c55e;
}

.oieSquare .squareFront {
  color: #15803d;
}

/* Case pont - Couleur bleue simple */
.pontSquare {
  background: #dbeafe;
  border-color: #3b82f6;
}

.pontSquare .squareFront {
  color: #1d4ed8;
}

/* Case hôtel - Couleur violette simple */
.hotelSquare {
  background: #f3e8ff;
  border-color: #9333ea;
}

.hotelSquare .squareFront {
  color: #7c3aed;
}

/* Case puits - Couleur indigo simple */
.puitsSquare {
  background: #e0e7ff;
  border-color: #6366f1;
}

.puitsSquare .squareFront {
  color: #4f46e5;
}

/* Case labyrinthe - Couleur orange simple */
.labyrintheSquare {
  background: #fed7aa;
  border-color: #f97316;
}

.labyrintheSquare .squareFront {
  color: #ea580c;
}

/* Case prison - Couleur grise simple */
.prisonSquare {
  background: #f1f5f9;
  border-color: #6b7280;
}

.prisonSquare .squareFront {
  color: #4b5563;
}

/* Case mort - Couleur rouge/noire simple */
.mortSquare {
  background: #fef2f2;
  border-color: #ef4444;
}

.mortSquare .squareFront {
  color: #dc2626;
}

/* === CASE ACTIVE === */
.hotSquare {
  border-color: #fbbf24 !important;
  background: #fef3c7 !important;
  box-shadow: 0 0 8px rgba(251, 191, 36, 0.4);
}

/* === PIÈCES DE JEU SIMPLIFIÉES === */
.gamePiece {
  width: clamp(18px, 4vw, 28px);
  height: clamp(18px, 4vw, 28px);
  position: absolute;
  top: 50%;
  left: 50%;
  margin-left: calc(clamp(18px, 4vw, 28px) / -2);
  margin-top: calc(clamp(18px, 4vw, 28px) / -2);
  z-index: 10;
  pointer-events: none;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  font-size: clamp(10px, 2.5vw, 14px);
  color: white;
  border: 2px solid white;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.localTower {
  background: #fbbf24;
  border-color: #f59e0b;
}

.remoteTower {
  /* === PIÈCES DE JEU SIMPLIFIÉES === */
.gamePiece {
  width: clamp(18px, 4vw, 28px);
  height: clamp(18px, 4vw, 28px);
  position: absolute;
  top: 50%;
  left: 50%;
  margin-left: calc(clamp(18px, 4vw, 28px) / -2);
  margin-top: calc(clamp(18px, 4vw, 28px) / -2);
  z-index: 10;
  pointer-events: none;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  font-size: clamp(10px, 2.5vw, 14px);
  color: white;
  border: 2px solid white;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.localTower {
  background: #fbbf24;
  border-color: #f59e0b;
}

.remoteTower {
  background: #3b82f6;
  border-color: #2563eb;
}

/* Supprimer tous les styles 3D des tours pour le mode 2D */
.towerBase, .towerBody, .towerTop, .towerRing, .pieceShadow {
  display: none;
}

/* === DÉ === */
.diceContainer {
  transform-style: preserve-3d;
  margin-bottom: 60px;
  z-index: 20;
  position: relative;
}

.diceButton {
  background: linear-gradient(145deg, 
    rgba(255, 215, 0, 0.95) 0%,
    rgba(255, 193, 7, 0.9) 50%,
    rgba(255, 152, 0, 0.85) 100%
  );
  border: none;
  border-radius: 16px;
  padding: 16px 32px;
  font-size: 1.4rem;
  font-weight: bold;
  color: #1a1a1a;
  cursor: pointer;
  transform-style: preserve-3d;
  transition: all 0.3s ease;
  box-shadow: 
    0 8px 25px rgba(255, 215, 0, 0.4),
    0 2px 10px rgba(0, 0, 0, 0.3),
    inset 0 2px 5px rgba(255, 255, 255, 0.3);
  position: relative;
  overflow: hidden;
}

.diceButton:hover {
  transform: translateY(-2px) scale(1.02);
  box-shadow: 
    0 12px 35px rgba(255, 215, 0, 0.5),
    0 4px 15px rgba(0, 0, 0, 0.4),
    inset 0 2px 5px rgba(255, 255, 255, 0.4);
}

.diceButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: scale(1);
}

.diceFace {
  position: relative;
  z-index: 2;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

/* === CONTRÔLES SIMPLIFIÉS === */
.controlsBar {
  position: absolute;
  top: 1rem;
  left: 50%;
  transform: translateX(-50%);
  z-index: 10;
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 0.75rem 1.5rem;
  background: white;
  border: 1px solid #e2e8f0;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.gameTitle {
  font-size: 1.5rem;
  font-weight: bold;
  color: #1e293b;
  margin: 0;
  letter-spacing: 0.5px;
}

.buttonGroup {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.turnStatus {
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 0.5rem;
}

.turnIndicator {
  padding: 0.3rem 0.8rem;
  border-radius: 20px;
  font-size: 0.85rem;
  font-weight: 600;
  text-align: center;
  transition: all 0.3s ease;
  border: 1px solid transparent;
}

.myTurn {
  background: linear-gradient(145deg, 
    rgba(34, 197, 94, 0.2) 0%,
    rgba(22, 163, 74, 0.3) 100%
  );
  color: #22c55e;
  border-color: rgba(34, 197, 94, 0.4);
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
  animation: pulseGreen 2s ease-in-out infinite;
}

.waitingTurn {
  background: linear-gradient(145deg, 
    rgba(156, 163, 175, 0.2) 0%,
    rgba(107, 114, 128, 0.3) 100%
  );
  color: #9ca3af;
  border-color: rgba(156, 163, 175, 0.4);
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
}

.controlButton {
  padding: 0.5rem 1rem;
  font-size: 0.9rem;
  font-weight: 600;
  background: linear-gradient(145deg, 
    rgba(107, 114, 142, 0.9) 0%,
    rgba(75, 85, 99, 0.85) 50%,
    rgba(55, 65, 81, 0.8) 100%
  );
  color: #ffffff;
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 
    0 4px 15px rgba(0, 0, 0, 0.3),
    inset 0 1px 3px rgba(255, 255, 255, 0.2);
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
}

.controlButton:hover {
  transform: translateY(-2px) scale(1.05);
  background: linear-gradient(145deg, 
    rgba(59, 130, 246, 0.9) 0%,
    rgba(37, 99, 235, 0.85) 50%,
    rgba(29, 78, 216, 0.8) 100%
  );
  box-shadow: 
    0 8px 25px rgba(59, 130, 246, 0.4),
    0 3px 10px rgba(0, 0, 0, 0.4),
    inset 0 1px 3px rgba(255, 255, 255, 0.3);
  border-color: rgba(59, 130, 246, 0.5);
}

.controlButton:active {
  transform: translateY(1px) scale(0.98);
}

.rollButton {
  padding: 0.6rem 1.2rem;
  font-size: 1rem;
  font-weight: bold;
  background: linear-gradient(145deg, 
    rgba(255, 215, 0, 0.95) 0%,
    rgba(255, 193, 7, 0.9) 50%,
    rgba(255, 152, 0, 0.85) 100%
  );
  color: #1a1a1a;
  border: none;
  border-radius: 12px;
  cursor: pointer;
  box-shadow: 
    0 8px 25px rgba(255, 215, 0, 0.4),
    0 2px 10px rgba(0, 0, 0, 0.3),
    inset 0 2px 5px rgba(255, 255, 255, 0.3);
  transition: all 0.3s ease;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.rollButton:hover {
  transform: translateY(-2px) scale(1.05);
  box-shadow: 
    0 15px 35px rgba(255, 215, 0, 0.5),
    0 5px 15px rgba(0, 0, 0, 0.4),
    inset 0 2px 5px rgba(255, 255, 255, 0.4);
}

.rollButton:active {
  transform: translateY(1px) scale(0.98);
}

.rollButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: scale(1);
}

/* Canvas container */
.canvasContainer {
  width: 100%;
  height: 100%;
}

/* === FEEDBACK OVERLAY === */
.feedbackOverlay {
  position: absolute;
  bottom: 2rem;
  left: 50%;
  transform: translateX(-50%);
  z-index: 15;
  padding: 1rem 2rem;
  border-radius: 16px;
  backdrop-filter: blur(10px);
  box-shadow: 
    0 8px 25px rgba(0, 0, 0, 0.4),
    0 2px 10px rgba(0, 0, 0, 0.2),
    inset 0 2px 5px rgba(255, 255, 255, 0.1);
  transition: all 0.5s ease;
  animation: feedbackSlideIn 0.5s ease-out;
  max-width: 400px;
  text-align: center;
}

.feedbackOverlay.success {
  background: linear-gradient(145deg, 
    rgba(34, 197, 94, 0.9) 0%,
    rgba(22, 163, 74, 0.85) 50%,
    rgba(16, 185, 129, 0.8) 100%
  );
  border: 2px solid rgba(34, 197, 94, 0.6);
  color: #ffffff;
}

.feedbackOverlay.error {
  background: linear-gradient(145deg, 
    rgba(239, 68, 68, 0.9) 0%,
    rgba(220, 38, 38, 0.85) 50%,
    rgba(185, 28, 28, 0.8) 100%
  );
  border: 2px solid rgba(239, 68, 68, 0.6);
  color: #ffffff;
}

.feedbackOverlay.info {
  background: linear-gradient(145deg, 
    rgba(59, 130, 246, 0.9) 0%,
    rgba(37, 99, 235, 0.85) 50%,
    rgba(29, 78, 216, 0.8) 100%
  );
  border: 2px solid rgba(59, 130, 246, 0.6);
  color: #ffffff;
}

.feedbackMessage {
  font-size: 1.1rem;
  font-weight: 600;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
  margin: 0;
  line-height: 1.4;
}

.feedbackIcon {
  font-size: 1.5rem;
  margin-right: 0.5rem;
  display: inline-block;
}

.feedbackOverlay.fadeOut {
  animation: feedbackSlideOut 0.5s ease-in forwards;
}

/* === ICÔNES ET TEXTES === */
.specialIcon {
  font-size: 1.2em;
  margin-left: 0.3em;
}

/* === RESPONSIVE === */
@media (max-width: 768px) {
  .boardContainer {
    perspective: 1200px;
    padding: 20px 10px 80px;
    min-height: 100vh;
  }
  
  .spiralBoard {
    width: clamp(300px, 95vw, 600px);
    height: clamp(300px, 95vw, 600px);
    gap: clamp(3px, 0.8vw, 10px);
    padding: clamp(6px, 1.2vw, 16px);
  }
  
  .boardSquare {
    border-radius: 8px;
  }
  
  .squareFront {
    font-size: clamp(0.6rem, 3vw, 1rem);
    border-radius: 8px;
  }
  
  .specialIcon {
    font-size: 1.1em;
  }
  
  .gamePiece {
    width: clamp(16px, 5vw, 28px);
    height: clamp(32px, 10vw, 55px);
    margin-left: calc(clamp(16px, 5vw, 28px) / -2);
    margin-top: calc(clamp(32px, 10vw, 55px) / -1.2);
  }
  
  .diceButton {
    padding: 12px 24px;
    font-size: 1.1rem;
    border-radius: 12px;
  }
}

@media (max-width: 480px) {
  .boardContainer {
    perspective: 800px;
    padding: 15px 5px 60px;
  }
  
  .spiralBoard {
    width: 96vw;
    height: 96vw;
    gap: 2px;
    padding: 4px;
    border-radius: 12px;
  }
  
  .boardSquare {
    border-radius: 6px;
  }
  
  .squareFront {
    font-size: clamp(0.5rem, 4vw, 0.9rem);
    border-radius: 6px;
    border-width: 1px;
  }
  
  .specialIcon {
    font-size: 1em;
    margin-left: 0.2em;
  }
  
  .gamePiece {
    width: clamp(14px, 6vw, 24px);
    height: clamp(28px, 12vw, 48px);
    margin-left: calc(clamp(14px, 6vw, 24px) / -2);
    margin-top: calc(clamp(28px, 12vw, 48px) / -1.2);
  }
  
  .diceButton {
    padding: 10px 20px;
    font-size: 1rem;
    border-radius: 10px;
  }
  
  .diceContainer {
    margin-bottom: 40px;
  }
}

/* === OPTIMISATIONS PERFORMANCE === */
@media (prefers-reduced-motion: reduce) {
  .boardGrid,
  .gamePiece,
  .diceButton,
  .pieceShadow {
    animation: none !important;
  }
  
  .boardSquare {
    transition: none !important;
  }
}

/* === MODE SOMBRE === */
@media (prefers-color-scheme: dark) {
  .boardContainer {
    background: radial-gradient(ellipse at center, 
      rgba(5, 10, 20, 0.98) 0%,
      rgba(10, 15, 25, 0.99) 50%,
      rgba(0, 0, 0, 1) 100%
    );
  }
  
  .squareFront {
    text-shadow: 
      0 3px 10px rgba(0, 0, 0, 1),
      0 0 6px rgba(0, 0, 0, 0.8);
  }
}

/* === CONTRASTE ÉLEVÉ === */
@media (prefers-contrast: high) {
  .squareFront {
    border-width: 3px;
    font-weight: 900;
  }
  
  .oieSquare, .pontSquare, .hotelSquare, .puitsSquare, 
  .labyrintheSquare, .prisonSquare, .mortSquare,
  .redDarkSquare, .redMidSquare, .redLightSquare {
    border-width: 3px;
  }
}
